(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{524:function(s,n,a){"use strict";a.r(n);var e=a(6),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("hr"),s._v(" "),a("h2",{attrs:{id:"_1-zip文件的压缩与解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-zip文件的压缩与解压"}},[s._v("#")]),s._v(" 1. ZIP文件的压缩与解压")]),s._v(" "),a("ul",[a("li",[s._v("除2.3外其余都需要引入以下依赖:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("compile group: 'org.apache.commons', name: 'commons-compress', version: '1.21'\ncompile \"org.apache.commons:commons-lang3:3.12.0\"\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_1-1-不带密码的压缩与解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-不带密码的压缩与解压"}},[s._v("#")]),s._v(" 1.1 不带密码的压缩与解压")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package zip;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.util.Objects;\n\npublic class ZipUtilWithOutPwd {\n\n    public static void main(String[] args) {\n        String rootpath = "G:\\\\liutao";\n        String sourceFile = rootpath + "\\\\koal\\\\testzip";\n        String targetFile = rootpath + "\\\\koal\\\\testzip.zip";\n\n        //压缩文件\n        compress(sourceFile, targetFile);\n        //解压文件\n        uncompress(targetFile, rootpath + "\\\\koal\\\\testUnzip");\n\n        //压缩目录\n        //compress(rootpath , rootpath + ".zip");\n        //解压目录\n        //uncompress(rootpath + ".zip" , rootpath + "2");\n    }\n\n    /**\n     * 将文件压缩成zip\n     *\n     * @param sourceFile 源文件或目录，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.zip\n     */\n    public static void compress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (OutputStream fos = new FileOutputStream(targetFile);\n             OutputStream bos = new BufferedOutputStream(fos);\n             ArchiveOutputStream aos = new ZipArchiveOutputStream(bos);) {\n            Path dirPath = Paths.get(sourceFile);\n            Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n                @Override\n                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                    if(StringUtils.isNotBlank(dirPath.relativize(dir).toString())) {\n                        ArchiveEntry entry = new ZipArchiveEntry(dir.toFile(), dirPath.relativize(dir).toString());\n                        aos.putArchiveEntry(entry);\n                        aos.closeArchiveEntry();\n                    }\n                    return super.preVisitDirectory(dir, attrs);\n                }\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(\n                        file.toFile(), dirPath.relativize(file).toString());\n                    aos.putArchiveEntry(entry);\n                    IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                    aos.closeArchiveEntry();\n                    return super.visitFile(file, attrs);\n                }\n            });\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    /**\n     * 将zip文件解压到指定目录\n     *\n     * @param zipPath 源文件，如：archive.zip\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String zipPath, String descDir) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(zipPath));\n             InputStream bis = new BufferedInputStream(fis);\n             ArchiveInputStream ais = new ZipArchiveInputStream(bis);\n        ) {\n            ArchiveEntry entry;\n            // TODO 如果出现EOF报错 可以加上 ais.available() > 0 条件\n            // 一般是不用加的，如果报EOF，大概率是生成的zip文件有点问题\n            // while (ais.available() > 0  && Objects.nonNull(entry = ais.getNextEntry()))\n            while (Objects.nonNull(entry = ais.getNextEntry())) {\n                if (!ais.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(ais, o);\n                    }\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br")])]),a("h3",{attrs:{id:"_1-2-带密码的压缩与解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-带密码的压缩与解压"}},[s._v("#")]),s._v(" 1.2 带密码的压缩与解压")]),s._v(" "),a("ul",[a("li",[s._v("原理: 就是将上述不带密码的zip文件，通过CipherOutputStream流加密")]),s._v(" "),a("li",[s._v("缺点: 加密后输出的zip文件，无法打开（也不能输入密码进行打开）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package zip;\n\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.CipherInputStream;\nimport javax.crypto.CipherOutputStream;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.PBEKeySpec;\nimport javax.crypto.spec.PBEParameterSpec;\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.security.Key;\nimport java.util.Objects;\n\npublic class ZipUtil {\n    public static final String ALGORITHM = "PBEWITHMD5andDES";\n    public static final int ITERATION_COUNT = 100;\n    public static final byte[] SALT = "woffwork".getBytes();\n\n    public static void main(String[] args) {\n        String rootpath = "G:\\\\liutao";\n        String sourceFile = rootpath + "\\\\koal\\\\testzip";\n        String targetFile = rootpath + "\\\\koal\\\\testzip.zip";\n\n        //压缩文件\n        compress(sourceFile, targetFile);\n        //解压文件\n        uncompress(targetFile, rootpath + "\\\\koal\\\\testUnzip");\n\n        //压缩目录\n        //compress(rootpath , rootpath + ".zip");\n        //解压目录\n        //uncompress(rootpath + ".zip" , rootpath + "2");\n    }\n\n    /**\n     * 将文件压缩成zip\n     *\n     * @param sourceFile 源文件或目录，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.zip\n     */\n    public static void compress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (OutputStream fos = new FileOutputStream(targetFile);\n             ByteArrayOutputStream bos = new ByteArrayOutputStream();\n             ArchiveOutputStream aos = new ZipArchiveOutputStream(bos)) {\n            Path dirPath = Paths.get(sourceFile);\n            Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n                @Override\n                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(dir.toFile(), dirPath.relativize(dir).toString());\n                    aos.putArchiveEntry(entry);\n                    aos.closeArchiveEntry();\n                    return super.preVisitDirectory(dir, attrs);\n                }\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(\n                        file.toFile(), dirPath.relativize(file).toString());\n                    aos.putArchiveEntry(entry);\n                    IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                    aos.closeArchiveEntry();\n                    return super.visitFile(file, attrs);\n                }\n            });\n            aos.close();\n            // 加密\n            Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, "123456");\n            CipherOutputStream cos = new CipherOutputStream(fos, cipher);\n\n            InputStream is = new ByteArrayInputStream(bos.toByteArray());\n            byte[] buffer = new byte[1024];\n            int r;\n            while ((r = is.read(buffer)) >= 0) {\n                cos.write(buffer, 0, r);\n            }\n\n            cos.flush();\n            cos.close();\n            is.close();\n\n        } catch (Exception e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    /**\n     * 将zip文件解压到指定目录\n     *\n     * @param zipPath 源文件，如：archive.zip\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String zipPath, String descDir) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(zipPath))) {\n            // 解密\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            Cipher cipher = getCipher(Cipher.DECRYPT_MODE, "123456");\n            CipherInputStream cis = new CipherInputStream(fis, cipher);\n            byte[] buffer = new byte[1024];\n            int r;\n            while ((r = cis.read(buffer)) >= 0) {\n                bos.write(buffer, 0, r);\n            }\n            cis.close();\n            fis.close();\n\n            ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(bos.toByteArray()));\n\n            ArchiveEntry entry;\n            while (Objects.nonNull(entry = zis.getNextEntry())) {\n                if (!zis.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(zis, o);\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    private static Key toKey(String password) throws Exception {\n        // 密钥材料\n        PBEKeySpec keySpec = new PBEKeySpec(password.toCharArray());\n        // 实例化\n        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);\n        // 生成密钥\n        return keyFactory.generateSecret(keySpec);\n    }\n\n    private static Cipher getCipher(int opmode, String password) throws Exception {\n        // 转换密钥\n        Key key = toKey(password);\n        // 实例化PBE参数材料\n        PBEParameterSpec paramSpec = new PBEParameterSpec(SALT, ITERATION_COUNT);\n        // 实例化\n        Cipher cipher = Cipher.getInstance(ALGORITHM);\n        // 初始化\n        cipher.init(opmode, key, paramSpec);\n        return cipher;\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br")])]),a("h4",{attrs:{id:"扩展版（根据需要，可以生成加密的zip-或-不加密的zip）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展版（根据需要，可以生成加密的zip-或-不加密的zip）"}},[s._v("#")]),s._v(" 扩展版（根据需要，可以生成加密的zip  或 不加密的zip）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package zip;\n\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.CipherInputStream;\nimport javax.crypto.CipherOutputStream;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.PBEKeySpec;\nimport javax.crypto.spec.PBEParameterSpec;\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.security.Key;\nimport java.util.Objects;\n\npublic class ZipUtil2 {\n    public static final String ALGORITHM = "PBEWITHMD5andDES";\n    public static final int ITERATION_COUNT = 100;\n    public static final byte[] SALT = "woffwork".getBytes();\n\n    public static void main(String[] args) {\n        String rootpath = "G:\\\\liutao";\n        String sourceFile = rootpath + "\\\\koal\\\\testzip";\n        String targetFile = rootpath + "\\\\koal\\\\testzip.zip";\n\n        //压缩文件\n        compress(sourceFile, targetFile, null);\n        //解压文件\n        uncompress(targetFile, rootpath + "\\\\koal\\\\testUnzip", null);\n\n        //压缩目录\n        //compress(rootpath , rootpath + ".zip");\n        //解压目录\n        //uncompress(rootpath + ".zip" , rootpath + "2");\n    }\n\n    /**\n     * 将文件压缩成zip\n     *\n     * @param sourceFile 源文件或目录，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.zip\n     */\n    public static void compress(String sourceFile, String targetFile, String password) {\n        long d1 = System.currentTimeMillis();\n        try (ByteArrayOutputStream bos = new ByteArrayOutputStream();\n             ArchiveOutputStream aos = new ZipArchiveOutputStream(bos)) {\n            Path dirPath = Paths.get(sourceFile);\n            Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n                @Override\n                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                    if(StringUtils.isNotBlank(dirPath.relativize(dir).toString())){\n                        ArchiveEntry entry = new ZipArchiveEntry(dir.toFile(), dirPath.relativize(dir).toString());\n                        System.out.println("preVisitDirectory===>"+dirPath.relativize(dir).toString());\n                        aos.putArchiveEntry(entry);\n                        aos.closeArchiveEntry();\n                    }\n                    return super.preVisitDirectory(dir, attrs);\n                }\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(file.toFile(), dirPath.relativize(file).toString());\n                    System.out.println("visitFile===>"+dirPath.relativize(file).toString());\n                    aos.putArchiveEntry(entry);\n                    IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                    aos.closeArchiveEntry();\n                    return super.visitFile(file, attrs);\n                }\n            });\n\n            // aos一定要在此处关闭，否则会导致部分缓存数据没写入到bos中，导致后续加密或写入文件的内容不完整\n            aos.close();\n\n            // 创建文件输出流，最终压缩文件写入此流中\n            OutputStream fos = new FileOutputStream(targetFile);\n            InputStream is = new ByteArrayInputStream(bos.toByteArray());\n            byte[] buffer = new byte[1024];\n\n            if (StringUtils.isNotBlank(password)) {\n                // 加密\n                Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, password);\n                CipherOutputStream cos = new CipherOutputStream(fos, cipher);\n                int r;\n                while ((r = is.read(buffer)) >= 0) {\n                    cos.write(buffer, 0, r);\n                }\n                // 确保数据完全写入到cos中\n                cos.close();\n                is.close();\n                fos.close();\n            } else {\n                int r;\n                while ((r = is.read(buffer)) >= 0) {\n                    fos.write(buffer, 0, r);\n                }\n                fos.close();\n            }\n        } catch (Exception e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    /**\n     * 将zip文件解压到指定目录\n     *\n     * @param zipPath 源文件，如：archive.zip\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String zipPath, String descDir, String password) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(zipPath))) {\n\n            // 解密\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            byte[] buffer = new byte[1024];\n            int r;\n            if (StringUtils.isEmpty(password)) {\n                while ((r = fis.read(buffer)) >= 0) {\n                    bos.write(buffer, 0, r);\n                }\n            } else {\n                Cipher cipher = getCipher(Cipher.DECRYPT_MODE, password);\n                CipherInputStream cis = new CipherInputStream(fis, cipher);\n                while ((r = cis.read(buffer)) >= 0) {\n                    bos.write(buffer, 0, r);\n                }\n                cis.close();\n            }\n\n            ArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(bos.toByteArray()));\n\n            ArchiveEntry entry;\n            while (Objects.nonNull(entry = zis.getNextEntry())) {\n                System.out.println("unzip ===>"+entry.getName());\n                if (!zis.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(zis, o);\n                    }\n                }\n            }\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    private static Key toKey(String password) throws Exception {\n        // 密钥材料\n        PBEKeySpec keySpec = new PBEKeySpec(password.toCharArray());\n        // 实例化\n        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);\n        // 生成密钥\n        return keyFactory.generateSecret(keySpec);\n    }\n\n    private static Cipher getCipher(int opmode, String password) throws Exception {\n        // 转换密钥\n        Key key = toKey(password);\n        // 实例化PBE参数材料\n        PBEParameterSpec paramSpec = new PBEParameterSpec(SALT, ITERATION_COUNT);\n        // 实例化\n        Cipher cipher = Cipher.getInstance(ALGORITHM);\n        // 初始化\n        cipher.init(opmode, key, paramSpec);\n        return cipher;\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br")])]),a("h4",{attrs:{id:"增强版-可以传入集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增强版-可以传入集合"}},[s._v("#")]),s._v(" 增强版 (可以传入集合)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package zip;\n\nimport org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\nimport org.apache.commons.lang3.StringUtils;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.CipherInputStream;\nimport javax.crypto.CipherOutputStream;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.PBEKeySpec;\nimport javax.crypto.spec.PBEParameterSpec;\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.security.Key;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\n\npublic class ZipUtilExt {\n    public static final String ALGORITHM = "PBEWithHmacSHA512AndAES_256";\n    public static final int ITERATION_COUNT = 100;\n    public static final byte[] SALT = "woffwork".getBytes();\n\n    public static void main(String[] args) {\n        String targetFile = "G:\\\\liutao\\\\koal\\\\testzip.zip";\n\n        List<String> tobezipFiles = new ArrayList<>();\n        tobezipFiles.add("G:\\\\liutao\\\\koal\\\\testzip");\n        tobezipFiles.add("G:\\\\liutao\\\\koal\\\\liutaotestzip");\n        tobezipFiles.add("G:\\\\liutao\\\\koal\\\\ASNTool.exe");\n\n        //压缩文件\n        compress(tobezipFiles, targetFile, null, true);\n        //解压文件\n        uncompress(targetFile,"G:\\\\liutao\\\\koal\\\\testUnzip", null);\n    }\n\n    /**\n     * 将文件压缩成zip\n     * @param sourceFiles 待压缩的文件列表 (集合中的元素可以是文件夹，也可以是文件)\n     * @param targetFile  输出的压缩文件路径\n     * @param password    压缩密码，为空时不进行加密压缩\n     * @param isNeedFolder 是否需要打入目录，如果原文件是文件夹，\n     *                     为true时代表将该文件夹也压缩进结果文件，如果为false，代表只将该文件夹下的文件或目录压缩进结果文件\n     */\n    public static void compress(List<String> sourceFiles, String targetFile, String password, boolean isNeedFolder) {\n        long d1 = System.currentTimeMillis();\n        try (ByteArrayOutputStream bos = new ByteArrayOutputStream();\n             ArchiveOutputStream aos = new ZipArchiveOutputStream(bos)) {\n\n            for(String sourceFile : sourceFiles){\n                addEntry(sourceFile, aos, isNeedFolder);\n            }\n            // aos一定要在此处关闭，否则会导致部分缓存数据没写入到bos中，导致后续加密或写入文件的内容不完整\n            aos.close();\n\n            // 创建文件输出流，最终压缩文件写入此流中\n            OutputStream fos = new FileOutputStream(targetFile);\n            InputStream is = new ByteArrayInputStream(bos.toByteArray());\n            byte[] buffer = new byte[1024];\n\n            if (StringUtils.isNotBlank(password)) {\n                // 加密\n                Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, password);\n                CipherOutputStream cos = new CipherOutputStream(fos, cipher);\n                int r;\n                while ((r = is.read(buffer)) >= 0) {\n                    cos.write(buffer, 0, r);\n                }\n                // 确保数据完全写入到cos中\n                cos.close();\n                is.close();\n                fos.close();\n            } else {\n                int r;\n                while ((r = is.read(buffer)) >= 0) {\n                    fos.write(buffer, 0, r);\n                }\n                fos.close();\n            }\n        } catch (Exception e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n    private static void addEntry(String sourceFile, ArchiveOutputStream aos, boolean isNeedFolder) throws IOException {\n        Path dirPath = Paths.get(sourceFile);\n        Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n            @Override\n            public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                // 计算压缩文件放在zip文件中的路径\n                String relativePath = dirPath.relativize(dir).toString();\n                if(!isNeedFolder && StringUtils.isNotBlank(relativePath)){\n                    System.out.println("正在创建压缩目录节点:=====>"+ relativePath);\n                    ArchiveEntry entry = new ZipArchiveEntry(dir.toFile(), relativePath);\n                    aos.putArchiveEntry(entry);\n                    aos.closeArchiveEntry();\n                }\n                return super.preVisitDirectory(dir, attrs);\n            }\n\n            @Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                // 计算压缩文件放在zip文件中的路径\n                String relativePath =  dirPath.relativize(file).toString();\n                if(StringUtils.isBlank(relativePath)){\n                    // 为空代表 dirPath 为一个文件\n                    relativePath = dirPath.getFileName().toString();\n                }else if(isNeedFolder){\n                    String dirPathFileName = dirPath.getFileName().toString();\n                    relativePath =dirPathFileName + File.separator + relativePath;\n                }\n                System.out.println("正在压缩文件:=====>"+ relativePath);\n                ArchiveEntry entry = new ZipArchiveEntry(file.toFile(), relativePath);\n                aos.putArchiveEntry(entry);\n                IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                aos.closeArchiveEntry();\n                return super.visitFile(file, attrs);\n            }\n        });\n    }\n\n    /**\n     * 将zip文件解压到指定目录\n     *\n     * @param zipPath 源文件，如：archive.zip\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String zipPath, String descDir, String password) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(zipPath))) {\n\n            // 解密\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            byte[] buffer = new byte[1024];\n            int r;\n            if (StringUtils.isEmpty(password)) {\n                while ((r = fis.read(buffer)) >= 0) {\n                    bos.write(buffer, 0, r);\n                }\n            } else {\n                Cipher cipher = getCipher(Cipher.DECRYPT_MODE, password);\n                CipherInputStream cis = new CipherInputStream(fis, cipher);\n                while ((r = cis.read(buffer)) >= 0) {\n                    bos.write(buffer, 0, r);\n                }\n                cis.close();\n            }\n\n            ArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(bos.toByteArray()));\n\n            ArchiveEntry entry;\n            while (Objects.nonNull(entry = zis.getNextEntry())) {\n                System.out.println("unzip ===>"+entry.getName());\n                if (!zis.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(zis, o);\n                    }\n                }\n            }\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    private static Key toKey(String password) throws Exception {\n        // 密钥材料\n        PBEKeySpec keySpec = new PBEKeySpec(password.toCharArray());\n        // 实例化\n        SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);\n        // 生成密钥\n        return keyFactory.generateSecret(keySpec);\n    }\n\n    private static Cipher getCipher(int opmode, String password) throws Exception {\n        // 转换密钥\n        Key key = toKey(password);\n        // iv\n        IvParameterSpec iv = new IvParameterSpec("0000000000000000".getBytes());\n        // 实例化PBE参数材料\n        PBEParameterSpec paramSpec = new PBEParameterSpec(SALT, ITERATION_COUNT, iv);\n        // 实例化\n        Cipher cipher = Cipher.getInstance(ALGORITHM);\n        // 初始化\n        cipher.init(opmode, key, paramSpec);\n        return cipher;\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br"),a("span",{staticClass:"line-number"},[s._v("196")]),a("br"),a("span",{staticClass:"line-number"},[s._v("197")]),a("br"),a("span",{staticClass:"line-number"},[s._v("198")]),a("br"),a("span",{staticClass:"line-number"},[s._v("199")]),a("br"),a("span",{staticClass:"line-number"},[s._v("200")]),a("br"),a("span",{staticClass:"line-number"},[s._v("201")]),a("br"),a("span",{staticClass:"line-number"},[s._v("202")]),a("br"),a("span",{staticClass:"line-number"},[s._v("203")]),a("br"),a("span",{staticClass:"line-number"},[s._v("204")]),a("br"),a("span",{staticClass:"line-number"},[s._v("205")]),a("br"),a("span",{staticClass:"line-number"},[s._v("206")]),a("br"),a("span",{staticClass:"line-number"},[s._v("207")]),a("br"),a("span",{staticClass:"line-number"},[s._v("208")]),a("br"),a("span",{staticClass:"line-number"},[s._v("209")]),a("br"),a("span",{staticClass:"line-number"},[s._v("210")]),a("br"),a("span",{staticClass:"line-number"},[s._v("211")]),a("br"),a("span",{staticClass:"line-number"},[s._v("212")]),a("br"),a("span",{staticClass:"line-number"},[s._v("213")]),a("br"),a("span",{staticClass:"line-number"},[s._v("214")]),a("br"),a("span",{staticClass:"line-number"},[s._v("215")]),a("br")])]),a("h3",{attrs:{id:"_1-3-带密码的压缩与解压-zip4j"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-带密码的压缩与解压-zip4j"}},[s._v("#")]),s._v(" 1.3 带密码的压缩与解压-zip4j")]),s._v(" "),a("ul",[a("li",[s._v("引入以下依赖")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    api "net.lingala.zip4j:zip4j:2.11.5"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("这样生成的压缩文件可以在windows输入密码解压开")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package kl.npki.base.core.utils;\n\nimport net.lingala.zip4j.ZipFile;\nimport net.lingala.zip4j.exception.ZipException;\nimport net.lingala.zip4j.model.ZipParameters;\nimport net.lingala.zip4j.model.enums.EncryptionMethod;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.List;\n\n/**\n * 压缩文件工具类\n *\n * @author liutao\n */\npublic class ZipUtil {\n\n    /**\n     * 加密压缩文件\n     *\n     * @param tobeZipFiles 待压缩的文件列表（集合中的file，可以是目录，也可以是文件）\n     * @param password     压缩密码\n     * @return\n     */\n    public static File encryptZip(List<File> tobeZipFiles, String password) throws ZipException {\n        // 2. 创建一个 ZipFile 对象并设置密码\n        ZipFile zipFile = new ZipFile("back.zip");\n        zipFile.setPassword(password.toCharArray());\n\n        // 3. 创建一个 ZipParameters 对象并设置加密方法\n        ZipParameters paramsForFolder = new ZipParameters();\n        paramsForFolder.setEncryptFiles(true);\n        paramsForFolder.setEncryptionMethod(EncryptionMethod.ZIP_STANDARD);\n        ZipParameters paramsForFile = new ZipParameters();\n        paramsForFile.setEncryptFiles(true);\n        paramsForFile.setEncryptionMethod(EncryptionMethod.ZIP_STANDARD);\n        // 4. 循环遍历源文件列表，将每个文件添加到 ZIP 文件中，同时应用加密参数\n        for (File file : tobeZipFiles) {\n            if (file.isDirectory()) {\n                zipFile.addFolder(file, paramsForFolder);\n            } else {\n                paramsForFile.setFileNameInZip(file.getName());\n                zipFile.addFile(file, paramsForFile);\n            }\n        }\n\n        return zipFile.getFile();\n    }\n\n\n    /**\n     * 解压文件\n     *\n     * @param toUnZipFile\n     * @param destDir\n     * @param password\n     * @throws ZipException\n     */\n    public static void encryptUnZip(File toUnZipFile, String destDir, String password) throws IOException {\n        ZipFile zipFile = new ZipFile(toUnZipFile, password.toCharArray());\n        // 验证.zip文件是否合法，包括文件是否存在、是否为zip文件、是否被损坏等\n        if (!zipFile.isValidZipFile()) {\n            throw new ZipException("压缩文件不合法,可能被损坏.");\n        }\n        zipFile.extractAll(destDir);\n        zipFile.close();\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br")])]),a("h2",{attrs:{id:"_2-整合大部分类型的压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-整合大部分类型的压缩"}},[s._v("#")]),s._v(" 2. 整合大部分类型的压缩")]),s._v(" "),a("ul",[a("li",[s._v("需要引入commons-compress")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-compress</artifactId>\n    <version>1.21</version>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("CompressUtil把各压缩算法集中起来")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * 公用压缩工具类，支持Gzip、Zip、Tar、LZ4、Snappy压缩算法\n */\npublic class CompressUtil {\n\n    public static class Gzip {\n        public static void compress(String sourceFile , String targetFile){\n            GzipUtil.compress(sourceFile , targetFile);\n        }\n        public static void uncompress(String sourceFile , String targetFile){\n            GzipUtil.uncompress(sourceFile , targetFile);\n        }\n    }\n\n    public static class LZ4 {\n        public static void compress(String sourceFile , String targetFile){\n            LZ4Util.compress(sourceFile , targetFile);\n        }\n        public static void uncompress(String sourceFile , String targetFile){\n            LZ4Util.uncompress(sourceFile , targetFile);\n        }\n    }\n\n    public static class Snappy {\n        public static void compress(String sourceFile , String targetFile){\n            SnappyUtil.compress(sourceFile , targetFile);\n        }\n        public static void uncompress(String sourceFile , String targetFile){\n            SnappyUtil.uncompress(sourceFile , targetFile);\n        }\n    }\n\n    public static class Zip {\n        public static void compress(String sourceFile, String targetFile){\n            ZipUtil.compress(sourceFile , targetFile);\n        }\n        public static void uncompress(String zipPath, String descDir) {\n            ZipUtil.uncompress(zipPath , descDir);\n        }\n    }\n\n    public static class Tar {\n        public static void compress(String sourceFile, String targetFile) {\n            TarUtil.compress(sourceFile , targetFile);\n        }\n        public static void uncompress(String tarPath, String descDir) {\n            TarUtil.uncompress(tarPath , descDir);\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("ul",[a("li",[s._v("GzipUtil")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\nimport org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream;\n\nimport java.io.*;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class GzipUtil {\n\n    /**\n     * 将文件压缩成gzip\n     * @param sourceFile 源文件，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.gz\n     */\n    public static void compress(String sourceFile , String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream in = Files.newInputStream(Paths.get(sourceFile));\n             OutputStream fout = Files.newOutputStream(Paths.get(targetFile));\n             BufferedOutputStream out = new BufferedOutputStream(fout);\n             GzipCompressorOutputStream gzOut = new GzipCompressorOutputStream(out);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = in.read(buffer))) {\n                gzOut.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n    /**\n     * 将gzip文件解压\n     * @param sourceFile 源文件，如：archive.tar.gz\n     * @param targetFile 目标文件，如：archive.tar\n     */\n    public static void uncompress(String sourceFile , String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fin = Files.newInputStream(Paths.get(sourceFile));\n             BufferedInputStream in = new BufferedInputStream(fin);\n             OutputStream out = Files.newOutputStream(Paths.get(targetFile));\n             GzipCompressorInputStream gzIn = new GzipCompressorInputStream(in);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = gzIn.read(buffer))) {\n                out.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br")])]),a("ul",[a("li",[s._v("LZ4Util")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream;\nimport org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream;\n\nimport java.io.*;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class LZ4Util {\n\n    /**\n     * 将文件压缩成LZ4文件\n     *\n     * @param sourceFile 源文件，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.lz4\n     */\n    public static void compress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream in = Files.newInputStream(Paths.get(sourceFile));\n             OutputStream fout = Files.newOutputStream(Paths.get(targetFile));\n             BufferedOutputStream out = new BufferedOutputStream(fout);\n             FramedLZ4CompressorOutputStream lzOut = new FramedLZ4CompressorOutputStream(out);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = in.read(buffer))) {\n                lzOut.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n    /**\n     * 将LZ4文件进行解压\n     * @param sourceFile 源文件，如：archive.tar.lz4\n     * @param targetFile 目标文件，如：archive.tar\n     */\n    public static void uncompress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fin = Files.newInputStream(Paths.get(sourceFile));\n             BufferedInputStream in = new BufferedInputStream(fin);\n             OutputStream out = Files.newOutputStream(Paths.get(targetFile));\n             FramedLZ4CompressorInputStream zIn = new FramedLZ4CompressorInputStream(in);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = zIn.read(buffer))) {\n                out.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br")])]),a("ul",[a("li",[s._v("SnappyUtil")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream;\nimport org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream;\n\nimport java.io.*;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class SnappyUtil {\n\n    /**\n     * 将文件压缩成gzip\n     * @param sourceFile 源文件，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.sz\n     */\n    public static void compress(String sourceFile , String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream in = Files.newInputStream(Paths.get(sourceFile));\n             OutputStream fout = Files.newOutputStream(Paths.get(targetFile));\n             BufferedOutputStream out = new BufferedOutputStream(fout);\n             FramedSnappyCompressorOutputStream snOut = new FramedSnappyCompressorOutputStream(out);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = in.read(buffer))) {\n                snOut.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n    /**\n     * 将gzip文件解压\n     * @param sourceFile 源文件，如：archive.tar.sz\n     * @param targetFile 目标文件，如：archive.tar\n     */\n    public static void uncompress(String sourceFile , String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fin = Files.newInputStream(Paths.get(sourceFile));\n             BufferedInputStream in = new BufferedInputStream(fin);\n             OutputStream out = Files.newOutputStream(Paths.get(targetFile));\n             FramedSnappyCompressorInputStream zIn = new FramedSnappyCompressorInputStream(in);){\n            int buffersize = 10240;\n            final byte[] buffer = new byte[buffersize];\n            int n = 0;\n            while (-1 != (n = zIn.read(buffer))) {\n                out.write(buffer, 0, n);\n            }\n        } catch (IOException e) {\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br")])]),a("ul",[a("li",[s._v("zipUtil")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;\nimport org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\n\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.util.Objects;\n\npublic class ZipUtil {\n\n    public static void main(String[] args) {\n        String rootpath = "C:\\\\Temp\\\\chdlTemp\\\\testcompress";\n        String sourceFile = rootpath + "\\\\springboot项目jar瘦身.docx";\n        String targetFile = rootpath + "\\\\springboot项目jar瘦身.docx.zip";\n\n        //压缩文件\n        compress(sourceFile , targetFile);\n        //解压文件\n        uncompress(targetFile, rootpath + "\\\\springboot项目jar瘦身2.docx");\n\n        //压缩目录\n        //compress(rootpath , rootpath + ".zip");\n        //解压目录\n        //uncompress(rootpath + ".zip" , rootpath + "2");\n    }\n\n    /**\n     * 将文件压缩成zip\n     *\n     * @param sourceFile 源文件或目录，如：archive.tar\n     * @param targetFile 目标文件，如：archive.tar.zip\n     */\n    public static void compress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (OutputStream fos = new FileOutputStream(targetFile);\n             OutputStream bos = new BufferedOutputStream(fos);\n             ArchiveOutputStream aos = new ZipArchiveOutputStream(bos);){\n            Path dirPath = Paths.get(sourceFile);\n            Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n                @Override\n                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(dir.toFile(), dirPath.relativize(dir).toString());\n                    aos.putArchiveEntry(entry);\n                    aos.closeArchiveEntry();\n                    return super.preVisitDirectory(dir, attrs);\n                }\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new ZipArchiveEntry(\n                            file.toFile(), dirPath.relativize(file).toString());\n                    aos.putArchiveEntry(entry);\n                    IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                    aos.closeArchiveEntry();\n                    return super.visitFile(file, attrs);\n                }\n            });\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    /**\n     * 将zip文件解压到指定目录\n     *\n     * @param zipPath 源文件，如：archive.zip\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String zipPath, String descDir) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(zipPath));\n             InputStream bis = new BufferedInputStream(fis);\n             ArchiveInputStream ais = new ZipArchiveInputStream(bis);\n             ){\n            ArchiveEntry entry;\n            while (Objects.nonNull(entry = ais.getNextEntry())) {\n                if (!ais.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(ais, o);\n                    }\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br")])]),a("ul",[a("li",[s._v("tarUtil")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import org.apache.commons.compress.archivers.ArchiveEntry;\nimport org.apache.commons.compress.archivers.ArchiveInputStream;\nimport org.apache.commons.compress.archivers.ArchiveOutputStream;\nimport org.apache.commons.compress.archivers.tar.TarArchiveEntry;\nimport org.apache.commons.compress.archivers.tar.TarArchiveInputStream;\nimport org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;\nimport org.apache.commons.compress.utils.IOUtils;\n\nimport java.io.*;\nimport java.nio.file.*;\nimport java.nio.file.attribute.BasicFileAttributes;\nimport java.util.Objects;\n\npublic class TarUtil {\n\n    public static void main(String[] args) {\n        String rootpath = "C:\\\\Temp\\\\chdlTemp\\\\testcompress";\n        String sourceFile = rootpath + "\\\\springboot项目jar瘦身.docx";\n        String targetFile = rootpath + "\\\\springboot项目jar瘦身.docx.tar";\n\n        //压缩文件\n        compress(sourceFile , targetFile);\n        //解压文件\n        uncompress(targetFile, rootpath + "\\\\springboot项目jar瘦身2.docx");\n    }\n\n    /**\n     * 将文件压缩成tar\n     *\n     * @param sourceFile 源文件或目录，如：archive\n     * @param targetFile 目标文件，如：archive.tar\n     */\n    public static void compress(String sourceFile, String targetFile) {\n        long d1 = System.currentTimeMillis();\n        try (OutputStream fos = new FileOutputStream(targetFile);\n             OutputStream bos = new BufferedOutputStream(fos);\n             ArchiveOutputStream aos = new TarArchiveOutputStream(bos);){\n            Path dirPath = Paths.get(sourceFile);\n            Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() {\n                @Override\n                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new TarArchiveEntry(dir.toFile(), dirPath.relativize(dir).toString());\n                    aos.putArchiveEntry(entry);\n                    aos.closeArchiveEntry();\n                    return super.preVisitDirectory(dir, attrs);\n                }\n\n                @Override\n                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                    ArchiveEntry entry = new TarArchiveEntry(\n                            file.toFile(), dirPath.relativize(file).toString());\n                    aos.putArchiveEntry(entry);\n                    IOUtils.copy(new FileInputStream(file.toFile()), aos);\n                    aos.closeArchiveEntry();\n                    return super.visitFile(file, attrs);\n                }\n            });\n        } catch (IOException e) {\n            System.out.println("压缩失败，原因：" + e.getMessage());\n        }\n        System.out.println("压缩完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n\n\n    /**\n     * 将tar文件解压到指定目录\n     *\n     * @param tarPath 源文件，如：archive.tar\n     * @param descDir 解压目录\n     */\n    public static void uncompress(String tarPath, String descDir) {\n        long d1 = System.currentTimeMillis();\n        try (InputStream fis = Files.newInputStream(Paths.get(tarPath));\n             InputStream bis = new BufferedInputStream(fis);\n             ArchiveInputStream ais = new TarArchiveInputStream(bis);\n        ){\n            ArchiveEntry entry;\n            while (Objects.nonNull(entry = ais.getNextEntry())) {\n                if (!ais.canReadEntryData(entry)) {\n                    continue;\n                }\n                String name = descDir + File.separator + entry.getName();\n                File f = new File(name);\n                if (entry.isDirectory()) {\n                    if (!f.isDirectory() && !f.mkdirs()) {\n                        f.mkdirs();\n                    }\n                } else {\n                    File parent = f.getParentFile();\n                    if (!parent.isDirectory() && !parent.mkdirs()) {\n                        throw new IOException("failed to create directory " + parent);\n                    }\n                    try (OutputStream o = Files.newOutputStream(f.toPath())) {\n                        IOUtils.copy(ais, o);\n                    }\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.out.println("解压失败，原因：" + e.getMessage());\n        }\n        System.out.println("解压完毕，耗时：" + (System.currentTimeMillis() - d1) + " ms");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);