(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{522:function(v,_,l){"use strict";l.r(_);var a=l(6),i=Object(a.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"_1-驱动类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-驱动类型"}},[v._v("#")]),v._v(" 1. 驱动类型")]),v._v(" "),l("ul",[l("li",[v._v("JDBC（Java Database Connectivity）驱动程序是Java应用程序与数据库通信的接口。")]),v._v(" "),l("li",[v._v("根据不同的实现方式，JDBC驱动程序通常分为四种类型，每种类型都有其特点和适用场景。")])]),v._v(" "),l("h3",{attrs:{id:"_1-1-jdbc-odbc-桥接驱动"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-jdbc-odbc-桥接驱动"}},[v._v("#")]),v._v(" 1.1 JDBC-ODBC 桥接驱动")]),v._v(" "),l("ul",[l("li",[v._v("工作原理\n"),l("ul",[l("li",[v._v("JDBC-ODBC 桥接驱动通过调用ODBC（Open Database Connectivity）驱动来访问数据库。")]),v._v(" "),l("li",[v._v("Java代码通过JDBC调用ODBC驱动程序，ODBC驱动程序再与数据库通信。")])])]),v._v(" "),l("li",[v._v("优点：\n"),l("ul",[l("li",[v._v("允许使用已安装的ODBC驱动来访问数据库，因此不需要为每个数据库安装专门的JDBC驱动。")])])]),v._v(" "),l("li",[v._v("缺点：\n"),l("ul",[l("li",[v._v("依赖于ODBC驱动，性能较低。")]),v._v(" "),l("li",[v._v("需要在客户端机器上安装ODBC驱动和配置DSN（数据源名称）。")]),v._v(" "),l("li",[v._v("由于桥接器是通过本地代码调用的，不是纯Java实现，因此不跨平台。")]),v._v(" "),l("li",[v._v("已被逐步淘汰，Java 8之后不再提供JDBC-ODBC Bridge。")])])]),v._v(" "),l("li",[v._v("使用场景\n"),l("ul",[l("li",[v._v("不推荐使用，主要用于旧系统或过渡期间。")])])])]),v._v(" "),l("h3",{attrs:{id:"_1-2-本地api驱动"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-本地api驱动"}},[v._v("#")]),v._v(" 1.2 本地API驱动")]),v._v(" "),l("ul",[l("li",[v._v("工作原理\n"),l("ul",[l("li",[v._v("将JDBC调用转换为数据库供应商的本地客户端API调用。")]),v._v(" "),l("li",[v._v("驱动程序使用本地库（例如，DLL文件）来与数据库进行交互。")])])]),v._v(" "),l("li",[v._v("优点：\n"),l("ul",[l("li",[v._v("比类型1驱动速度快，因为它直接调用了数据库的本地API。")])])]),v._v(" "),l("li",[v._v("缺点：\n"),l("ul",[l("li",[v._v("依赖于数据库供应商的本地客户端库，这些库必须在客户端机器上安装和配置。")]),v._v(" "),l("li",[v._v("由于依赖于本地库，这种驱动程序不是纯Java的，跨平台性差。")])])]),v._v(" "),l("li",[v._v("使用场景\n"),l("ul",[l("li",[v._v("已逐步淘汰，主要在不需要跨平台能力且可以使用本地客户端库的应用程序中使用。")])])])]),v._v(" "),l("h3",{attrs:{id:"_1-3-网络协议驱动"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-网络协议驱动"}},[v._v("#")]),v._v(" 1.3 网络协议驱动")]),v._v(" "),l("ul",[l("li",[v._v("工作原理\n"),l("ul",[l("li",[v._v("类型3驱动程序将JDBC调用转换为中间层服务器使用的协议，中间层服务器再将请求转发给数据库。")]),v._v(" "),l("li",[v._v("中间层服务器通常负责将这些请求转换为数据库的本地API调用。")])])]),v._v(" "),l("li",[v._v("优点\n"),l("ul",[l("li",[v._v("纯Java实现，具有跨平台性。")]),v._v(" "),l("li",[v._v("不需要在客户端机器上安装数据库的本地API库。")]),v._v(" "),l("li",[v._v("提供了较好的灵活性，因为只需要在中间层服务器上更改数据库协议。")])])]),v._v(" "),l("li",[v._v("缺点：\n"),l("ul",[l("li",[v._v("需要配置和维护中间层服务器。")]),v._v(" "),l("li",[v._v("性能可能会因为多了一层中间处理而受到影响。")])])])]),v._v(" "),l("h3",{attrs:{id:"_1-4-本地协议驱动"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-本地协议驱动"}},[v._v("#")]),v._v(" 1.4 本地协议驱动")]),v._v(" "),l("ul",[l("li",[v._v("工作原理\n"),l("ul",[l("li",[v._v("类型4驱动程序将JDBC调用直接转换为数据库的本地网络协议,如Oracle的Net8协议或MySQL的MySQL协议。")]),v._v(" "),l("li",[v._v("它直接与数据库服务器通信，不需要中间层或本地库。")])])]),v._v(" "),l("li",[v._v("优点：\n"),l("ul",[l("li",[v._v("纯Java实现，完全跨平台。")]),v._v(" "),l("li",[v._v("不需要额外的本地库或中间层服务器，安装和维护简单。")]),v._v(" "),l("li",[v._v("性能通常最好，因为它消除了中间层和本地库调用的开销。")])])]),v._v(" "),l("li",[v._v("缺点：\n"),l("ul",[l("li",[v._v("每个数据库需要特定的驱动程序，无法通用。")])])]),v._v(" "),l("li",[v._v("使用场景\n"),l("ul",[l("li",[v._v("目前最常用的驱动类型，适用于需要高性能和跨平台的应用程序")])])])]),v._v(" "),l("h2",{attrs:{id:"_2-总结"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-总结"}},[v._v("#")]),v._v(" 2. 总结")]),v._v(" "),l("ul",[l("li",[v._v("类型1和类型2驱动逐渐过时，主要用于遗留系统。")]),v._v(" "),l("li",[v._v("类型3驱动适用于需要中间层和跨平台支持的大型企业应用。")]),v._v(" "),l("li",[v._v("类型4驱动（Thin Driver）是最常用和推荐的驱动类型，适用于大多数现代Java应用程序。")])])])}),[],!1,null,null,null);_.default=i.exports}}]);