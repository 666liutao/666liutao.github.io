(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{532:function(a,e,s){"use strict";s.r(e);var t=s(6),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),s("p",[a._v("在处理一个分页工作时，需要做一个向上取整的操作，类似这样：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 总数\nint totalSize = 799;\n// 页大小\nint pageSize = 200;\n// 计算页数需要向上取整\n// 这里的向上取整如何处理？\nint pageCount = (double)totalSize / pageSize;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("这个向上取整计算其实很常用，但是似乎没有一个比较标准的处理方式。")]),a._v(" "),s("h2",{attrs:{id:"方案1-检查余数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案1-检查余数"}},[a._v("#")]),a._v(" 方案1: 检查余数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// ...\nint pageCount = totalSize / pageSize;\nif (totalSize % pageSize > 0) {\n    pageCount++;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h2",{attrs:{id:"方案2-不推荐-：math-ceil-double-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案2-不推荐-：math-ceil-double-x"}},[a._v("#")]),a._v(" 方案2: (不推荐)：Math.ceil(double x)")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int pageCount = (int)Math.ceil((double)totalSize / pageSize);\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("最大的问题：Math.ceil的返回类型是double。")]),a._v(" "),s("p",[a._v("且不说这个场景是两个整型运算，结果也是整型，中间就要经过两次类型转换操作，看起来不够流畅；我们还应该考虑到在类型转换中可能存在的精度丢失问题。")]),a._v(" "),s("p",[a._v("精度丢失可能仅仅在很极端的场景下出现，可一旦出现就是非常难以排查的隐式bug。举个例子：")]),a._v(" "),s("p",[a._v("1.假设某两个数的ceil计算结果原本是2.0，但由于精度问题，ceil结果其实是1.9999999999999999999999999")]),a._v(" "),s("p",[a._v("2.在结果转为int型数据时，发生了精度丢失，计算结果由2.0转换为1，相当于少了一页")]),a._v(" "),s("p",[a._v("3.在分页处理过程中，缺失了最后一页的数据")]),a._v(" "),s("p",[a._v("4.在复现过程中，仅有极个别case中会出现这种bug，且从代码逻辑来看其实也没什么问题")]),a._v(" "),s("p",[a._v("再举个例子，假设使用double类型的pageCount，如下一段代码就有可能出现ArrayOutOfBoundsException：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("double pageCount = 2d;    // 可能实际存储的是2.000000000000001，请意会\nfor (int page = 0; page < pageCount; page++) {\n    // Array或List的遍历操作\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"方案3-增加一点小处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案3-增加一点小处理"}},[a._v("#")]),a._v(" 方案3 : 增加一点小处理")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int pageCount = (totalSize + pageSize - 1) / pageSize;\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[a._v("#")]),a._v(" 补充")]),a._v(" "),s("p",[a._v("为什么Math.ceil返回的是浮点数？")]),a._v(" "),s("p",[a._v("是的，返回浮点整数虽然符合ceil的语义，但并不符合我们平常的直观理解，如果能返回整型数该多好？")]),a._v(" "),s("p",[a._v("但是这个方法的入参就是double类型，而无论是int类型或是long类型的表示范围都远远小于double类型的范围，如果使用整型就有可能表示不了，因而造成这一奇怪的现实。")])])}),[],!1,null,null,null);e.default=n.exports}}]);