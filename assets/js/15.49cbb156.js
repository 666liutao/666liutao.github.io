(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{521:function(t,s,e){"use strict";e.r(s);var a=e(6),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),e("ul",[e("li",[t._v("在使用公司框架时，数据库查询byte字段时，发现数据存在不一致的现象")])]),t._v(" "),e("h1",{attrs:{id:"现象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#现象"}},[t._v("#")]),t._v(" 现象")]),t._v(" "),e("ul",[e("li",[t._v("代码如下:")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("byte[] oriByte = new byte[] { 41, -31, -91, 41, -71, -11 };\nbyte[] destByte = new String(bytes).getBytes();\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("ul",[e("li",[t._v("这里未指定编码格式，使用的为系统默认编码 Charset.defaultCharset()，本系统下为 UTF-8")]),t._v(" "),e("li",[t._v("问题现象： 构造byte转字符串的编码格式和字符串转byte的编码格式一致，但 oriByte 和 destByte 的值不一样")])]),t._v(" "),e("h1",{attrs:{id:"原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),e("ul",[e("li",[t._v("由于原byte数组，并不是UTF-8格式")]),t._v(" "),e("li",[t._v("所以经过UTF-8编码后，String已经和原值不一致了")]),t._v(" "),e("li",[t._v("另外，由于UTF-8是多字节编码，需要用多个字节来表示一个字符的编码，所以也就出现了在转换之后byte[]数组长度、内容不一致的情况。")]),t._v(" "),e("li",[t._v("而ISO-8859-1编码是单字节编码，所以使用该编码就不会出现上面的问题")])]),t._v(" "),e("h1",{attrs:{id:"测试代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试代码"}},[t._v("#")]),t._v(" 测试代码")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import java.nio.charset.Charset;\nimport java.util.Arrays;\n\npublic class test {\n\n    public static void main(String[] args) {\n        byte[] bytes = new byte[] { 41, -31, -91, 41, -71, -11 };\n        byte[] myBytes = new String(bytes).getBytes();\n        System.out.println(Arrays.toString(bytes));\n        System.out.println(Arrays.toString(myBytes));\n        // 问题原因 :new String(byte[])和getBytes()默认使用的编码都是通过这条语句获取的编码\n        // 获取默认编码\n        System.out.println(Charset.defaultCharset().name());\n        // 解决原理\n        // 由于UTF-8是多字节编码，需要用多个字节来表示一个字符的编码，所以也就出现了在转换之后byte[]数组长度、内容不一致的情况。\n        // 而ISO-8859-1编码是单字节编码，所以使用该编码就不会出现上面的问题\n        byte[] bytes3 = new String(bytes, Charset.forName("ISO-8859-1")).getBytes(Charset.forName("ISO-8859-1"));\n        System.out.println(Arrays.toString(bytes3));\n    }\n\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);